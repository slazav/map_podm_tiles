#!/bin/sh -efu

if [ "$#" -ne "0" ]
then
  . ./$1
else
  . ./settings.sh
fi
######################################################################

update_fig_tile(){
  echo $k
  local x=$1;
  local y=$2;
  local borderFilename="${border_dir}/${x}_${y}_${sc}.txt"
  
  echo "tile: $x $y"
  
  local x1 x2 y1 y2 dx dy

  calc x1 "( $x   / 2^($sc-1) - 1)*$k"
  calc x2 "(($x+1)/ 2^($sc-1) - 1)*$k"

  calc y1 "(1 - ($y+1)/ 2^($sc-1))*$k"
  calc y2 "(1 -  $y   / 2^($sc-1))*$k"

  calc dx "$x2 - $x1"
  calc dy "$y2 - $y1"

  geom="${dx}x${dy}+$x1+$y1"

  # geom in Pulkovo LonLat:
  geom_pll="$(echo "bb_frw $geom 1" |
    convs_pt2pt "sphere" "merc" "" "pulkovo" "lonlat" "")"

  fig="$fig_dir/t$x-$y.fig"

  nom_list="$(convs_nom -r "$geom_pll" "100000")"

  src=
  need_update=
  for i in $nom_list; do
    f=$vmap_dir/$i.vmap
    [ -f "$f" ] || continue
    
    local cropedVmap="$fig_crop_dir/$i--$x-$y.fig"
    if [ ! -f "$cropedVmap" -o "$cropedVmap" -ot "$f" ]
    then
      mapsoft_vmap -v "$f" -o "$cropedVmap"\
        --range_datum=sphere --range_proj=merc --range="$geom"\
        --range_action=crop_spl
    fi

    [ -f "$fig" -a "$f" -ot "$fig" ] || need_update=1
    
    src="$src $cropedVmap"
  done

  if [ -z "$need_update" ]; then
    echo "Up to date"
    return 0
  fi

  brd=
  # create fig files if needed
  if [ ! -f "$fig" ]; then
    echo "$x,$y,$sc"
    mapsoft_geofig create --rscale 50000 --google "$x,$y,$sc" -o "$fig"
    my_src="$src"
    # if [ -z "$use_edited_border" ]; then
    brd="--set_brd_from_range"
    # fi
  else
    # use old labels if fig file exists:
    my_src="--skip_labels $src $fig --read_labels --skip_all"
  fi
  
  # externalBorder=
  # if [ -n "$use_edited_border" ]; then
  #   externalBorder="--set_brd $(cat $borderFilename)"
  # fi
  
  join_objects_param=
  if [ -n "$join_objects" ]; then
    join_objects_param="--join_objects 1e-4"
  fi
  
  # copy vmaps
  mapsoft_vmap -v $my_src --out $fig\
   --name "$(basename $fig .fig)"\
   --range_datum=sphere --range_proj=merc --range="$geom"\
   --range_action=crop_spl $brd $join_objects_param
}

######################################################################

mkdir -p -- "$fig_crop_dir"
mkdir -p -- "$fig_dir"
for x in $(seq $x1 $x2); do
  for y in $(seq $y1 $y2); do
    update_fig_tile "$x" "$y"
  done
done
